#!/usr/bin/env bash

# bsr - base16 shell random

# Sets a random theme every N minutes, via the excellent base16-shell
# (https://github.com/chriskempson/base16-shell) which you need to
# install first, obviously. After setting a new theme, it, the theme
# name is written to the tmux status bar (if tmux is running).

# Typical usage example for use in .bashrc - run in background and
# change theme every quarter of an hour. Also don't forget to ensure
# huponexit is set (with shopt -s huponexit) so that this backgrounded
# child process will be terminated when the parent shell process ends:
#
# shopt -s huponexit
# bsr 15 &

#Â DYNAMIC VALUES

# How often (in mins) to change the theme - supply as first argument
# on invocation, defaults to 30.
frequency=${1:-30}

# Where the theme scripts are (in the base16-shell installation)
themedir="${HOME}/.config/base16-shell/scripts"

# Pattern can be used to exclude certain themes (such as light ones)
exclude="${BSR_EXCLUDE:-^$}"

# A couple of helper files - where we write the current theme
# and where we store the PID of this script when it's running.
scriptfilename=$(basename "$0")
themefile="$(mktemp).${scriptfilename}.$$.theme"

# FUNCTIONS

log () { echo "$(date '+%Y-%m-%d %H:%M:%S')" "$0"; }
err () { echo "$0" 1>&2; }

# Returns a truthy value if it's not time for another theme change
function not_time_yet {
  find "$themefile" -newermt "${frequency} mins ago" 2>/dev/null | \
    grep -q "$themefile"
}

# Pick a theme at random - returns the theme name
function pick_random_theme {
  local theme
  theme=$(find "${themedir}" -name "*.sh" | grep -v -E "$exclude" | sort -R | tail -1)
  basename "$theme" ".sh"
}

# Set the new theme, write the name to the themefile,
# and display the name in tmux (if running).
function set_theme {
  local theme=$1
  # shellcheck source=/dev/null
  source "${themedir}/${theme}.sh"
  echo "$theme" > "$themefile"
  tmux rename-session "$theme" 2>/dev/null
}


# MAIN EXECUTION

# Ensure themefile is removed on exit
trap '{ rm -f $themefile; }' EXIT SIGTERM

set_theme "$(pick_random_theme)"

while true; do

  sleep 60

  # Go round again if it's not yet time to change the theme
  not_time_yet && continue

  set_theme "$(pick_random_theme)"

done
