#!/usr/bin/env bash

# bsr - base16 shell random

# Sets a random theme every N minutes, via the excellent base16-shell
# (https://github.com/chriskempson/base16-shell) which you need to
# install first, obviously. After setting a new theme, it, the theme
# name is written to the tmux status bar (if tmux is running).

# Typical usage example for use in .bashrc - run in background and
# change theme every quarter of an hour. Also don't forget to ensure
# huponexit is set (with shopt -s huponexit) so that this backgrounded
# child process will be terminated when the parent shell process ends:
#
# shopt -s huponexit
# bsr -d 15 &

#Â DYNAMIC VALUES

# Where the theme scripts are (in the base16-shell installation)
themedir="${HOME}/.config/base16-shell/scripts"

# Pattern can be used to exclude certain themes (such as light ones)
exclude="${BSR_EXCLUDE:-^$}"

parent=$(ps -o ppid= $$)


# FUNCTIONS

function log { echo "$(date '+%Y-%m-%d %H:%M:%S')" "$0"; }
function err { echo "$0" 1>&2; }
function get_tmp_dir { dirname $(mktemp -u); }

# Pick a theme at random - returns the theme name
function pick_random_theme {
  local theme
  theme=$(find "${themedir}" -name "*.sh" | grep -v -E "$exclude" | sort -R | tail -1)
  basename "$theme" ".sh"
}

# Set the new theme, write the name to the themefile,
# and display the name in tmux (if running).
function set_theme {
  local theme=$1
  # shellcheck source=/dev/null
  source "${themedir}/${theme}.sh"
  echo "$theme" > "$(get_tmp_dir)/bsr.$parent"
  tmux rename-session "$theme" 2>/dev/null
}

function continuous {
  # Ensure themefile is removed on exit
  trap '{ rm -f "$(get_tmp_dir)/bsr.$parent"; }' EXIT SIGTERM

  local frequency=$1
  while true; do
    $0 -r
    sleep $(( $frequency * 60 ))
  done
}

# MAIN EXECUTION

OPTIND=1

while getopts "d:rn:" opt; do
  case "$opt" in
    n)
      theme=$OPTARG
      if [[ ! -f "${themedir}/${theme}.sh" ]]; then
        err Theme $theme does not exist
        exit 1
      fi
      set_theme $theme
      exit 0
      ;;
    r)
      $0 -n $(pick_random_theme)
      exit 0
      ;;
    d)
      continuous $OPTARG
      exit 0
      ;;
  esac
done

echo print some help here
