#!/usr/bin/env bash
exit 0

# bsr - base16 shell random

# Sets a random theme every N minutes, via the excellent base16-shell
# (https://github.com/chriskempson/base16-shell) which you need to
# install first, obviously. After setting a new theme, it, the theme
# name is written to the tmux status bar (if tmux is running).

# Typical usage example for use in .bashrc - run in background and
# change theme every quarter of an hour. Also don't forget to ensure
# huponexit is set (with shopt -s huponexit) so that this backgrounded
# child process will be terminated when the parent shell process ends:
#
# shopt -s huponexit
# bsr -d 15 &

#Â DYNAMIC VALUES

# Where the theme scripts are (in the base16-shell installation)
themedir="${HOME}/.config/base16-shell/scripts"

# Where to write the theme name
current_theme_file=${BSR_INFO:-/tmp/tempname}

# FUNCTIONS

function log { echo "$(date '+%Y-%m-%d %H:%M:%S')" "$0"; }
function err { echo "$0" 1>&2; }
function get_tmp_dir { dirname "$(mktemp -u)"; }

function get_exclude_file {
  echo ${BSR_EXCLUDE_FILE:-${HOME}/.config/bsr.exclude}
}

function exclude_list {
  local exclude_file=$(get_exclude_file)
  if [ -s "$exclude_file" ]; then
    echo "($(uniq "$exclude_file" | grep -v "^$" | paste -s -d "|" -))"
  else
    echo "^$"
  fi
}

# Pick a theme at random - returns the theme name
function pick_random_theme {
  local theme
  theme=$(find "${themedir}" -name "*.sh" | grep -v -E "$(exclude_list)" | sort -R | tail -1)
  basename "$theme" ".sh"
}

# Set the new theme, write the name to the themefile,
# and display the name in tmux (if running).
function set_theme {
  local theme=$1
  if [[ ! -f "${themedir}/${theme}.sh" ]]; then
    err Theme "$theme" does not exist
    exit 1
  fi
  # shellcheck source=/dev/null
  source "${themedir}/${theme}.sh"
  echo "$theme" > "$current_theme_file"
  tmux rename-session "$theme" 2>/dev/null
}

function continuous {
  local frequency=$1
  while true; do
    $0 -r
    sleep $(( frequency * 60 ))
  done
}

# MAIN EXECUTION

OPTIND=1

# Process switches
while getopts "?g:d:rn:" opt; do
  case "$opt" in
    n)
      set_theme $OPTARG
      exit 0
      ;;
    r)
      $0 -n $(pick_random_theme)
      exit 0
      ;;
    g)
      echo "$(get_tmp_dir)/$(basename $0).$OPTARG"
      exit 0
      ;;
    d)
      continuous $OPTARG
      exit 0
      ;;
    ?)
      cat "$current_theme_file"
      exit 0
      ;;
  esac
done

# Process commands

# "no" - don't like this theme, add it to the exclude list
if [ "$1" = "no" ]; then
  $0 -? >> "$(get_exclude_file)"
  $0 -r
  exit 0
fi

echo print some help here
