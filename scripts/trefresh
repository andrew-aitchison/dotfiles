#!/usr/bin/env bash

# Token refresh - trefresh

# Refreshes an access token. Either specify no arguments, meaning the default
# context, or a string representing the context, for example 'yt' for YouTube.
# If no context is specified, the script also checks for an environment variable
# OAUTH_CONTEXT.


# shellcheck disable=1090
. "$(dirname "$0")/tlib.sh"

main() {

  declare oauth_file client_id_var client_secret_var

  setup "$1"

  # Determine the oauth file holding the info we're interested in.
  # Abort if the file doesn't exist.
  if [[ ! -f "$oauth_file" ]]; then
    echo "No OAuth file ($oauth_file)"
    exit 1
  fi

  # We need to use the refresh token that we've stored in
  # the OAuth data. Abort if we don't have one.
  local refresh_token
  refresh_token=$(jq -r .refresh_token < "$oauth_file")
  if [[ -z "${refresh_token}" ]]; then
    echo No refresh token available
    exit 1
  fi

  echo REFRESH TOKEN IS "X${refresh_token}Y"; exit;


  # Make the request to refresh the access token.
  curl \
    --fail \
    --data client_id="${!client_id_var}" \
    --data client_secret="${!client_secret_var}" \
    --data refresh_token="$refresh_token" \
    --data grant_type=refresh_token \
    "$GAPI_ENDPOINT_TOKEN" \
    > "$oauth_file"

  local rc=$?
  if [[ "$rc" -gt 0 ]]; then
    echo Failed to refresh token
    exit 1
  fi

}

main "$@"
