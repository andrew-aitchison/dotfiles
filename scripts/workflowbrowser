#!/usr/bin/env bash

# Find and browse GitHub Actions workflow definitions.
# In addition to regular shell tools (such as sed), this
# script uses gh, fzf, base64 and bat.

declare CACHETIME=1h

workflows() {

  # Takes owner type (org or user) and owner name.
  # Returns tab-separated list of owner/repo/workflowfile/path.

  local ownertype=$1
  local owner=$2

  gh api \
    --method GET \
    --paginate \
    --cache $CACHETIME \
    --field "q=$ownertype:$owner path:.github/workflows/" \
    --jq '.items[] | ["\(.repository.name)/\(.name)", .repository.name, .path, .html_url] | @tsv' \
    "/search/code" \
    | sed "s/^/$owner\t$owner\//"

}

showcontent() {

  # Takes owner/repo/path and shows content of that resource.

  local owner=$1
  local repo=$2
  local path=$3

  gh api \
    --cache $CACHETIME \
    --jq '.content' \
    "/repos/$owner/$repo/contents/$path" \
    | base64 --decode -i - \
    | bat --theme gruvbox --color always --language yaml --plain -

}

main() {

  #Â Calls workflows for my org and user.

  # Need to export this stuff because the fzf --preview
  # is executed in a subshell.
  export CACHETIME
  export -f showcontent

  cat \
    <(workflows org qmacro-org) \
    <(workflows user qmacro) \
    | fzf \
      --with-nth=2 \
      --delimiter='\t' \
      --preview='showcontent {1} {3} {4}' \
      | cut -f 5

}

main "$@"
